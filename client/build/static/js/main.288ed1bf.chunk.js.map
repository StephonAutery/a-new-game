{"version":3,"sources":["utils/API.js","components/container.component.js","components/sets/sueQuestions.component.js","components/sets/presidents.component.js","components/sets/questions.component.js","components/mystats.component.js","components/landing.component.js","components/navbar.component.js","components/signup.component.js","components/login.component.js","components/logout.component.js","components/play.component.js","App.js","registerServiceWorker.js","index.js"],"names":["API","getQuestions","axios","get","getSue","console","log","getPres","saveQuestion","question","post","getPresData","name","LOC_API","getUsers","getUserById","_id","getUserId","email","loginUser","logoutUser","signUp","newUser","saveResults","results","saveStats","stats","getResults","findResultsById","id","findUserStatsByID","Container","props","react_default","a","createElement","className","concat","fluid","children","Questions","state","questions","user","answers","answerID","userID","questionSet","selectedOption","questionNum","answerResult","numRight","numWrong","pCorrect","pIncorrect","onValueChange","event","_this","setState","target","value","_this2","this","then","res","data","JSON","parse","localStorage","getItem","answer","length","redirect","setQuestion","_this3","userid","react_router","to","pathname","pCorrecet","container_component","type","checked","onChange","b","c","onClick","handleFormSubmit","Component","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","presidents","presNum","pres","playStephon","componentDidMount","bind","assertThisInitialized","location","map","key","president","number","birth_year","took_office","left_office","death_year","party","href","Users","users","count","percentageCorrect","Math","round","percentageIncorrect","random","Landing","Navbar","NewQuestions","password","password2","race","loggedIn","preventDefault","role","errmsg","catch","err","handleChange","defineProperty","onSubmit","htmlFor","placeholder","autoComplete","username","handleSubmit","Login","status","setItem","stringify","clear","playSue","playPres","App","userObject","redirectTo","getUser","navbar_component_Navbar","react_router_dom","exact","path","render","component","Logout","MyStats","Signup","sueQuestions","Presidents","Play","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.288ed1bf.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default {\r\n    //########     question API's     #####\r\n    // get all the questions\r\n    getQuestions: function () {\r\n        return axios.get(\"/api/questions\");\r\n    },\r\n    getSue: function () {\r\n        console.log(\"----- sue api.js -\");\r\n        return axios.get(\"/api/questions/sue\");\r\n    },\r\n    getPres: function () {\r\n        console.log(\"----- presidents api.js -\");\r\n        return axios.get(\"/api/questions/pres\");\r\n    },\r\n    // save a question to the database\r\n    saveQuestion: function (question) {\r\n        return axios.post(\"/api/questions\", question)\r\n    },\r\n\r\n    //########     external API's     #####\r\n    // get the president data\r\n    getPresData: function (name) {\r\n        return axios.get(\"https://exploratory.io/public/api/kanaugust/US-Presidents-Data-Jhy7OdW1hE/data?api_key=guest?fo=json\")\r\n    },\r\n    // get library of congress articles\r\n    LOC_API: function (name) {\r\n        // return axios.get(\"https://www.loc.gov/?fo=json&at=trending_content\")\r\n        return axios.get(\"https://www.loc.gov/collections/?fo=json\")\r\n    },\r\n\r\n    //########     user API's     #####\r\n    //get all users\r\n    getUsers: function () {\r\n        return axios.get(\"/api/users\");\r\n    },\r\n    // get a single user\r\n    getUserById: function (_id) {\r\n        return axios.get(\"/api/users/\" + _id);\r\n    },\r\n    // get a single user\r\n    getUserId: function (email) {\r\n        return axios.post(\"/api/users/status\", email);\r\n    },\r\n    // login user\r\n    loginUser: function (name) {\r\n        console.log(name);\r\n        return axios.post(\"api/users/login\", name);\r\n    },\r\n    // logout user\r\n    logoutUser: function (logoutUser) {\r\n        console.log(\"API - logOut a user\")\r\n        console.log(\"api/logout\")\r\n    },\r\n    // signup a user\r\n    signUp: function (newUser){\r\n        console.log(newUser);\r\n        return axios.post(\"api/users/register\", newUser);\r\n    },\r\n\r\n    //########     stats API's     #####\r\n    //save a result\r\n    saveResults: function (results) {\r\n        return axios.post(\"api/results\", results)\r\n    },\r\n    //save stats\r\n    saveStats: function (stats) {\r\n        return axios.post(\"api/stats\", stats)\r\n    },\r\n    getResults: function () {\r\n        return axios.get(\"api/results\")\r\n    },\r\n    findResultsById: function (id) {\r\n        return axios.get(\"api/results/\" + id);\r\n    },\r\n    findUserStatsByID: function (id) {\r\n        return axios.get(\"api/results/\" + id);\r\n    }\r\n};","import React from \"react\";\r\n\r\nfunction Container(props) {\r\n  return <div className={`container${props.fluid ? \"-fluid\" : \"\"}`}>{props.children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","import React, { Component } from 'react';\r\nimport API from '../../utils/API';\r\nimport Container from \"../container.component\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default class Questions extends Component {\r\n    state = {\r\n        questions: [],\r\n        question: {},\r\n        user: \"\",\r\n        answers: [],\r\n        results: [],\r\n        answerID: 0,\r\n        userID: \"\",\r\n\r\n        questionSet: \"getQuestions\",\r\n\r\n        // loggedIn: this.props.loggedIn,\r\n        selectedOption: '',\r\n        questionNum: 0,\r\n        answerResult: [],\r\n        numRight: 0,\r\n        numWrong: 0,\r\n        pCorrect: 0,\r\n        pIncorrect: 0,\r\n    }\r\n\r\n    componentDidMount() {\r\n        API.getSue()\r\n            .then(res => {\r\n                this.setState({\r\n                    questions: res.data\r\n                })\r\n            })\r\n            .then(() => {\r\n                this.setState({\r\n                    questionNum: 1,\r\n                    question: this.state.questions[this.state.questionNum],\r\n                    userID: JSON.parse(localStorage.getItem('loginData'))\r\n                });\r\n            })\r\n        // API.LOC_API()\r\n        //     .then(res => {\r\n        //         // console.log(res.data.trending_content);\r\n        //         console.log(res.data.results);\r\n        //     })\r\n    }\r\n\r\n    onValueChange = event => {\r\n        this.setState({\r\n            selectedOption: event.target.value\r\n        });\r\n    }\r\n\r\n    setQuestion() {\r\n        this.setState({\r\n            questionNum: this.state.questionNum + 1,\r\n            question: this.state.questions[this.state.questionNum]\r\n        });\r\n    }\r\n\r\n    handleFormSubmit() {\r\n        //get the answer\r\n        if (this.state.selectedOption) {\r\n            if (this.state.question.answer === this.state.selectedOption || this.state.question.answer === 'all') {\r\n                // if they get it right\r\n                this.setState({\r\n                    numRight: this.state.numRight + 1,\r\n                    answerResult: this.state.answerResult.concat('right'),\r\n                    selectedOption: ''\r\n                });\r\n            } else {\r\n                // if they get it wrong\r\n                this.setState({\r\n                    numWrong: this.state.numWrong + 1,\r\n                    answerResult: this.state.answerResult.concat('wrong'),\r\n                    selectedOption: ''\r\n                });\r\n            }\r\n            // if all the questions are answered, redirect to the stats page\r\n            if (this.state.questionNum === this.state.questions.length) {\r\n                this.setState({\r\n                    redirect: \"/mystats\"\r\n                });\r\n            } else {\r\n                this.setQuestion();\r\n            }\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        console.log(\"----- userid - render -\")\r\n        console.log(this.state.userID.userid);\r\n        if (this.state.redirect) {\r\n            return <Redirect to={{\r\n                // sending data to mystats page\r\n                pathname: this.state.redirect,\r\n                state: {\r\n                    id: this.state.userID.userid,\r\n                    answers: this.state.answerResult,\r\n                    numRight: this.state.numRight,\r\n                    numWrong: this.state.numWrong,\r\n                    pCorrecet: this.state.pCorrect,\r\n                    pIncorrect: this.state.pIncorrect\r\n                }\r\n            }} />\r\n        }\r\n        return (\r\n            <Container>\r\n                <div className=\"container radio w-75\">\r\n                    <h4><p>question number : {this.state.questionNum}</p></h4>\r\n                    <hr />\r\n                    <div>\r\n                        <div className=\"card p-2 m-4\">\r\n                            <p>{this.state.question.question}</p>\r\n                            <hr />\r\n                            <p>\r\n                                <label>\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        value=\"a\"\r\n                                        checked={this.state.selectedOption === \"a\"}\r\n                                        onChange={this.onValueChange}\r\n                                    />\r\n                                        &nbsp;&nbsp;{this.state.question.a}<br />\r\n                                </label>\r\n                            </p>\r\n                            <p>\r\n                                <label>\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        value=\"b\"\r\n                                        checked={this.state.selectedOption === \"b\"}\r\n                                        onChange={this.onValueChange}\r\n                                    />\r\n                                        &nbsp;&nbsp;{this.state.question.b}<br />\r\n                                </label>\r\n                            </p>\r\n                            <p>\r\n                                <label>\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        value=\"c\"\r\n                                        checked={this.state.selectedOption === \"c\"}\r\n                                        onChange={this.onValueChange}\r\n                                    />\r\n                                        &nbsp;&nbsp;{this.state.question.c}<br />\r\n                                </label>\r\n                            </p>\r\n                            <p>\r\n                                <button\r\n                                    onClick={() => this.handleFormSubmit()}\r\n                                    className=\"save btn btn-info\"\r\n                                    type=\"submit\">answer\r\n                                        </button>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Component } from 'react';\r\nimport API from '../../utils/API';\r\nimport Container from \"../container.component\";\r\nimport { Redirect } from \"react-router-dom\";\r\n// import Moment from 'react-moment';\r\n\r\nexport default class Questions extends Component {\r\n    state = {\r\n        redirect: \"\",\r\n        presidents: [],\r\n        questionSet: \"getQuestions\",\r\n        selectedOption: '',\r\n        presNum: 0,\r\n        pres:\"\"\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.playStephon = this.componentDidMount.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        API.getPres()\r\n            .then(res => {\r\n                this.setState({\r\n                    presidents: res.data\r\n                })\r\n                console.log(this.state.presidents);\r\n            })\r\n            .then(() => {\r\n                this.setState({\r\n                    presNum: 1,\r\n                });\r\n            })\r\n    }\r\n\r\n    onValueChange = event => {\r\n        this.setState({\r\n            selectedOption: event.target.value\r\n        });\r\n    }\r\n\r\n    handleFormSubmit() {\r\n\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to={{\r\n                // sending data to next page\r\n                pathname: this.state.redirect,\r\n                state: {\r\n                    id: this.props.location.state.id,\r\n                    pres: this.state.pres._id\r\n                }\r\n            }} />\r\n        }\r\n        return (\r\n            <Container>\r\n                <div className=\"container\">\r\n                    <h4><p>president number : {this.state.presNum}</p></h4>\r\n                    <hr />\r\n\r\n                    <div>\r\n\r\n                        <div className=\"card \">\r\n                            {this.state.presidents.map(pres => (\r\n                                <div key={ pres._id } className=\"card-body\">\r\n                                    <h4>{ pres.president }</h4>\r\n                                    {pres.number}<hr />\r\n                                    birth year: { pres.birth_year}  <br />\r\n                                    took office: { pres.took_office}<br />\r\n                                    left office: { pres.left_office}<br />\r\n                                    death year: { pres.death_year}<br />\r\n                                    party: { pres.party}<hr />\r\n                                    <p>\r\n                                        <a href=\"/play\" className=\"btn btn-info\">play again</a>\r\n                                    </p>\r\n                                    <p>\r\n                                        <a href=\"/play\" data={ pres._id } className=\"btn btn-info\">{ pres._id } : more about this president</a>\r\n                                    </p>\r\n                                    <hr />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <p>\r\n                        <button\r\n                            onClick={() => this.handleFormSubmit()}\r\n                            className=\"save btn btn-info\"\r\n                            type=\"submit\">next President\r\n                                </button>\r\n                    </p>\r\n\r\n\r\n                </div>\r\n            </Container>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport API from '../../utils/API';\r\nimport Container from \"./../container.component\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default class Questions extends Component {\r\n    state = {\r\n        questions: [],\r\n        question: {},\r\n        user: \"\",\r\n        answers: [],\r\n        results: [],\r\n        answerID: 0,\r\n        userID: \"\",\r\n\r\n        questionSet: \"getQuestions\",\r\n\r\n        selectedOption: '',\r\n        questionNum: 0,\r\n        answerResult: [],\r\n        numRight: 0,\r\n        numWrong: 0,\r\n        pCorrect: 0,\r\n        pIncorrect: 0,\r\n        id: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        API.getQuestions()\r\n            .then(res => {\r\n                this.setState({\r\n                    questions: res.data\r\n                })\r\n            })\r\n            .then(res => {\r\n                this.setState({\r\n                    questionNum: 1,\r\n                    question: this.state.questions[this.state.questionNum],\r\n                    userID: JSON.parse(localStorage.getItem('loginData'))\r\n                })\r\n            })\r\n\r\n        // API.LOC_API()\r\n        //     .then(res => {\r\n        //         // console.log(res.data.trending_content);\r\n        //         console.log(res.data.results);\r\n        //     })\r\n    }\r\n\r\n    onValueChange = event => {\r\n        this.setState({\r\n            selectedOption: event.target.value\r\n        });\r\n    }\r\n\r\n    setQuestion() {\r\n        this.setState({\r\n            questionNum: this.state.questionNum + 1,\r\n            question: this.state.questions[this.state.questionNum]\r\n        });\r\n    }\r\n\r\n    handleFormSubmit() {\r\n        //get the answer\r\n        if (this.state.selectedOption) {\r\n            if (this.state.question.answer === this.state.selectedOption || this.state.question.answer === 'all') {\r\n                // if they get it right\r\n                this.setState({\r\n                    numRight: this.state.numRight + 1,\r\n                    answerResult: this.state.answerResult.concat('right'),\r\n                    selectedOption: ''\r\n                });\r\n            } else {\r\n                // if they get it wrong\r\n                this.setState({\r\n                    numWrong: this.state.numWrong + 1,\r\n                    answerResult: this.state.answerResult.concat('wrong'),\r\n                    selectedOption: ''\r\n                });\r\n            }\r\n            // if all the questions are answered, redirect to the stats page\r\n            if (this.state.questionNum === this.state.questions.length) {\r\n                this.setState({\r\n                    redirect: \"/mystats\"\r\n                });\r\n            } else {\r\n                this.setQuestion();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to={{\r\n                // sending data to mystats page\r\n                pathname: this.state.redirect,\r\n                state: {\r\n                    id: this.state.userID.userid,\r\n                    answers: this.state.answerResult,\r\n                    numRight: this.state.numRight,\r\n                    numWrong: this.state.numWrong,\r\n                    pCorrecet: this.state.pCorrect,\r\n                    pIncorrect: this.state.pIncorrect\r\n                }\r\n            }} />\r\n        }\r\n        return (\r\n            <Container>\r\n                <div className=\"container radio w-75\">\r\n                    <h4><p>question number : {this.state.questionNum}</p></h4>\r\n                    <hr />\r\n                    <div>\r\n                        <div className=\"card p-2 m-4\">\r\n                            <p>{this.state.question.question}</p>\r\n                            <hr />\r\n                            <p>\r\n                                <label>\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        value=\"a\"\r\n                                        checked={this.state.selectedOption === \"a\"}\r\n                                        onChange={this.onValueChange}\r\n                                    />\r\n                                        &nbsp;&nbsp;{this.state.question.a}<br />\r\n                                </label>\r\n                            </p>\r\n                            <p>\r\n                                <label>\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        value=\"b\"\r\n                                        checked={this.state.selectedOption === \"b\"}\r\n                                        onChange={this.onValueChange}\r\n                                    />\r\n                                        &nbsp;&nbsp;{this.state.question.b}<br />\r\n                                </label>\r\n                            </p>\r\n                            <p>\r\n                                <label>\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        value=\"c\"\r\n                                        checked={this.state.selectedOption === \"c\"}\r\n                                        onChange={this.onValueChange}\r\n                                    />\r\n                                        &nbsp;&nbsp;{this.state.question.c}<br />\r\n                                </label>\r\n                            </p>\r\n                            <p>\r\n                                <button\r\n                                    onClick={() => this.handleFormSubmit()}\r\n                                    className=\"save btn btn-info\"\r\n                                    type=\"submit\">answer\r\n                                        </button>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport API from '../utils/API';\r\nimport Container from \"./container.component\";\r\n\r\nexport default class Users extends Component {\r\n    state = {\r\n        users: [],\r\n        questions: [],\r\n        count: 0,\r\n        stats: [],\r\n        user: [],\r\n        percentageCorrect: Math.round(this.props.location.state.numRight / this.props.location.state.answers.length * 100),\r\n        percentageIncorrect: Math.round(this.props.location.state.numWrong / this.props.location.state.answers.length * 100)\r\n    }\r\n\r\n    componentDidMount() {\r\n        // API call to save answers to database\r\n        API.saveResults({\r\n            userID: this.props.location.state.id,\r\n            answerResult: this.props.location.state.answers,\r\n            questionSet: \"questions\"\r\n        });\r\n        API.saveStats({\r\n            userID: this.props.location.state.id,\r\n            numRight: this.props.location.state.numRight,\r\n            numWrong: this.props.location.state.numWrong,\r\n            percentageCorrect: this.state.percentageCorrect,\r\n            percentageIncorrect: this.state.percentageIncorrect,\r\n            questionSet: \"questions\"\r\n        });\r\n        // get question set from databse to show answers\r\n        API.getQuestions()\r\n            .then(res => {\r\n                this.setState({\r\n                    questions: res.data\r\n                })\r\n            });\r\n        // get users historical results from database\r\n        API.getResults()\r\n            .then(res => {\r\n            });\r\n\r\n        API.findUserStatsByID(this.props.location.state.id)\r\n            .then(res => {\r\n                this.setState({\r\n                    stats: res.data,\r\n                })\r\n            });\r\n        API.getUserById(this.props.location.state.id)\r\n            .then(res => {\r\n                this.setState({\r\n                    user: res.data.user\r\n                })\r\n                console.log(\"----- user -\");\r\n                console.log(this.state.user.name);\r\n            });\r\n    }\r\n\r\n    increment() {\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let min = 1;\r\n        let max = 1000;\r\n        return (\r\n            < Container >\r\n                <div className=\"container w-75\">\r\n                    {/* <h3><p>You Are: { this.state.user.name }</p></h3> */}\r\n                    <hr />\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col\">\r\n                            <div className=\"row card p-2 m-1\">\r\n                                <p>player ID:</p>\r\n                                <p>{ this.state.user.name }</p>\r\n                            </div>\r\n                            <div className=\"row card p-2 m-1\">\r\n                                <p>number correct:</p>\r\n                                <p>{this.props.location.state.numRight}</p>\r\n                                <p>number incorrect:</p>\r\n                                <p>{this.props.location.state.numWrong}</p>\r\n                                <p>percentage correct:</p>\r\n                                <p>{this.state.percentageCorrect} %</p>\r\n                                <p>percentage incorrect:</p>\r\n                                <p>{this.state.percentageIncorrect} %</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col card p-2 m-1\">\r\n                            <p>correct answers</p>\r\n                            {this.state.questions.map(question => (\r\n                                <p key={ question._id }>{ question.answer }</p>\r\n                            ))}\r\n                        </div>\r\n\r\n                        <div className=\"col card p-2 m-1\">\r\n                            <p>your answers</p>\r\n                            {this.props.location.state.answers.map(answer => (\r\n                                <p key={ min + (Math.random() * (max - min)) }> { answer }</p>\r\n                            ))}\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </Container >\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default class Landing extends Component {\r\n    state = {\r\n        redirect: \"\"\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to={{\r\n                pathname: this.state.redirect,\r\n                state: {\r\n                    id: JSON.parse(localStorage.getItem('loginData')),\r\n                }\r\n            }} />\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col p-2 m-4\">\r\n                        <h3><p>Welcome to History Portal!</p></h3>\r\n                        <hr />\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-4\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\">History Portal is a Social Awareness Application.</h4>\r\n                                <hr />\r\n                                <p className=\"card-text\">I hope you'll play with your friends and discover something about our country and  yourself.</p>\r\n                                <a href=\"/login\" className=\"btn btn-danger\">go to login</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\">This is not a competition.</h4>\r\n                                <hr />\r\n                                <p className=\"card-text\">There is no timer and no one can see your score unless YOU share it with them.</p>\r\n                                <a href=\"/signup\" className=\"btn btn-primary\">go to sign up</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div >\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n// import { Link } from 'react-router-dom';\r\n// import API from '../utils/API';\r\n\r\nexport default class Navbar extends Component {\r\n\r\n  state = {\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <nav className=\"navbar navbar-default\">\r\n          <div className=\"container-fluid\">\r\n          <div className=\"navbar-header\">\r\n            <a className=\"navbar-brand\" href=\"/\">History Portal</a>\r\n          </div>\r\n          <ul className=\"nav navbar-nav\">\r\n            <li><a href=\"/play\">play</a></li>\r\n            <li><a href=\"/logout\">logout</a></li>\r\n          </ul>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport API from \"../utils/API\";\r\n// import Select from 'react-select';\r\n\r\nexport default class NewQuestions extends Component {\r\n    state = {\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        password2: \"\",\r\n        race: \"\",\r\n        loggedIn: false,\r\n        redirect: null\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n    }\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        API.signUp({\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            password2: this.state.password2,\r\n            role: \"user\",\r\n            race: this.state.race\r\n        })\r\n            .then(res => {\r\n                console.log(\"login response: \");\r\n                console.log(res);\r\n                if (!res.data.errmsg) {\r\n                    console.log('successful signup');\r\n                    this.setState({\r\n                        redirect: '/login'\r\n                    });\r\n                } else {\r\n                    // console.log('username already taken');\r\n                    this.setState({\r\n                        redirect: '/login'\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(\"dang! you're not signed up!\");\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to={{\r\n                pathname: this.state.redirect\r\n            }} />\r\n        }\r\n        return (\r\n            <div className=\"container p-2 w-50\">\r\n                <h3><p>hello new user</p></h3>\r\n                <hr />\r\n                <form onSubmit={this.handleFormSubmit}>\r\n                    <label htmlFor=\"name\">\r\n                        &nbsp;&nbsp;name:\r\n                        <p>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={this.state.name}\r\n                                name=\"name\"\r\n                                placeholder=\"full name\"\r\n                                autoComplete=\"name\"\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </p>\r\n                    </label>\r\n                    <br />\r\n                    <label htmlFor=\"email\">\r\n                        &nbsp;&nbsp;email:\r\n                        <p>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={this.state.username}\r\n                                name=\"email\"\r\n                                placeholder=\"email address\"\r\n                                autoComplete=\"email\"\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </p>\r\n                    </label>\r\n                    <br />\r\n                    {/* <label htmlFor=\"race\">&nbsp;&nbsp;race:</label>\r\n                        <p>\r\n                            <select value={ this.state.race } name=\"race\" id=\"race\" placeholder=\"race\">\r\n                            <option value=\"White\">White American</option>\r\n                            <option value=\"Black\">Black or African American</option>\r\n                            <option value=\"IndianAlaskan\">American Indian and Alaska Native</option>\r\n                            <option value=\"Chinese\">Chinese American</option>\r\n                            <option value=\"Filipino\">Filipino American</option>\r\n                            <option value=\"AsianIndian\">Asian Indian American</option>\r\n                            <option value=\"NaHawiian\">Native Hawaiian American</option>\r\n                            <option value=\"Samoan\">Samoan American</option>\r\n                            <option value=\"Chamorro\">Chamorro American</option>\r\n                            <option value=\"PacificIs\">Pacific Islander</option>\r\n                            <option value=\"Mixed\">Mixed Race</option>\r\n                            </select>\r\n                        </p>\r\n                    <br /> */}\r\n                    <label htmlFor=\"password\">\r\n                        &nbsp;&nbsp;password:\r\n                        <p>\r\n                            <input\r\n                                type=\"password\"\r\n                                value={this.state.password}\r\n                                name=\"password\"\r\n                                placeholder=\"password\"\r\n                                autoComplete=\"password\"\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </p>\r\n                    </label>\r\n                    <br />\r\n                    <label htmlFor=\"password2\">\r\n                        &nbsp;&nbsp;re-enter password:\r\n                        <p>\r\n                            <input\r\n                                type=\"password\"\r\n                                value={this.state.password2}\r\n                                name=\"password2\"\r\n                                placeholder=\"password2\"\r\n                                autoComplete=\"password2\"\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </p>\r\n                    </label>\r\n                    <hr />\r\n                    <p>\r\n                        <button\r\n                            className=\"save btn btn-primary\"\r\n                            onClick={this.handleSubmit}\r\n                            type=\"submit\"\r\n                            value=\"submit\"\r\n                        >sign up</button>\r\n                    </p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport API from \"../utils/API\";\r\n\r\nexport default class Login extends Component {\r\n    state = {\r\n        email: \"\",\r\n        password: \"\",\r\n        loggedIn: false,\r\n        userID: \"\",\r\n        redirect: null\r\n    }\r\n\r\n    handleChange = event => {\r\n        // console.log(event.target.name + \" | \" + event.target.value);\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        API.loginUser({\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        })\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    API.getUserId({\r\n                        email: this.state.email\r\n                    }).then(res => {\r\n                        // update users state\r\n                        // set redirect state\r\n                        localStorage.setItem('loginData', JSON.stringify({ userid: res.data.id._id }));\r\n                        this.setState({\r\n                            loggedIn: true,\r\n                            // userID: res.data.id._id,\r\n                            userID: JSON.parse(localStorage.getItem('loginData')),\r\n                            redirect: 'play'\r\n                        });\r\n                    });\r\n                }\r\n                // this.forceUpdate(this.setRedirect);\r\n            }).catch(err => {\r\n                console.log(\"dang!\");\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to={{\r\n                pathname: this.state.redirect,\r\n                state: {\r\n                    id: this.state.userID,\r\n                    loggedIn: this.state.loggedIn\r\n                }\r\n            }} />\r\n        }\r\n        return (\r\n            <div className=\"container p-2 w-50\">\r\n                <h4><p>welcome to History Portal, please login</p></h4>\r\n                <h5><p>or</p></h5>\r\n                <h6><p><a className=\"nav-link\" href=\"/signup\">sign up</a></p></h6>\r\n                <hr />\r\n                <form>\r\n                    <label htmlFor=\"email\">\r\n                        &nbsp;&nbsp;email:\r\n                        <p>\r\n                            <input\r\n                                type=\"text\"\r\n                                // value={this.state.username}\r\n                                name=\"email\"\r\n                                placeholder=\"enter email\"\r\n                                autoComplete=\"email\"\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </p>\r\n                    </label>\r\n                    <br />\r\n                    <label htmlFor=\"password\">\r\n                        &nbsp;&nbsp;password:\r\n                        <p>\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                placeholder=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </p>\r\n                    </label>\r\n                    <hr />\r\n                    <p>\r\n                        <button\r\n                            className=\"save btn btn-danger\"\r\n                            onClick={this.handleFormSubmit}\r\n                            type=\"submit\"\r\n                            value=\"submit\">login\r\n                        </button>\r\n                    </p>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default class Login extends Component {\r\n    state = {\r\n        email: \"\",\r\n        password: \"\",\r\n        loggedIn: false,\r\n        userID: \"\",\r\n        redirect: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        localStorage.clear();\r\n        this.setState({\r\n            loggedIn: false,\r\n            redirect: \"landing\"\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to={{\r\n                pathname: this.state.redirect,\r\n            }} />\r\n        }\r\n        return (\r\n            <div>\r\n                <h4><p>logout</p></h4>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default class Landing extends Component {\r\n    state = {\r\n        redirect: \"\"\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.playStephon = this.playStephon.bind(this);\r\n        this.playSue = this.playSue.bind(this);\r\n        this.playPres = this.playPres.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!localStorage.getItem('loginData')) {\r\n            this.setState({\r\n                redirect: \"landing\"\r\n            })\r\n        }\r\n    }\r\n\r\n    playStephon(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            redirect: \"questions\"\r\n        });\r\n    }\r\n\r\n    playSue(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            redirect: \"sueQuestions\"\r\n        });\r\n    }\r\n\r\n    playPres(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            redirect: \"presidents\"\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to={{\r\n                pathname: this.state.redirect,\r\n                state: {\r\n                    id: JSON.parse(localStorage.getItem('loginData')),\r\n                    // loggedIn: this.props.location.state.loggedIn\r\n                }\r\n            }} />\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <form>\r\n                    <h3><p>question sets</p></h3>\r\n                    <hr />\r\n                    <p>Susannah Levy is an OBGyn/Obstetrics Nurse at UCSF General Hospital and the Mother of 2.</p>\r\n                    <button\r\n                        className=\"save btn btn-info\"\r\n                        onClick={this.playSue}\r\n                        type=\"submit\"\r\n                        value=\"submit\">Susannah Levy\r\n                    </button>\r\n                    <hr />\r\n                    <p>Stephon Autery is a Full Stack Developer and the Father of 2.</p>\r\n                    <button\r\n                        className=\"save btn btn-info\"\r\n                        onClick={this.playStephon}\r\n                        type=\"submit\"\r\n                        value=\"submit\">Stephon Autery\r\n                    </button>\r\n                    <hr />\r\n                    <p>explore the truth about the Presidents of the US?</p>\r\n                    <button\r\n                        className=\"save btn btn-info\"\r\n                        onClick={this.playPres}\r\n                        type=\"submit\"\r\n                        value=\"submit\">who's your President\r\n                    </button>\r\n                </form>\r\n            </div >\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport sueQuestions from \"./components/sets/sueQuestions.component\";\r\nimport Presidents from \"./components/sets/presidents.component\";\r\nimport Questions from \"./components/sets/questions.component\";\r\nimport MyStats from \"./components/mystats.component\";\r\nimport Landing from \"./components/landing.component\";\r\nimport Navbar from \"./components/navbar.component\";\r\nimport Signup from \"./components/signup.component\";\r\nimport Login from \"./components/login.component\";\r\nimport Logout from \"./components/logout.component\";\r\nimport Play from \"./components/play.component\";\r\nimport API from \"./utils/API.js\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    username: \"\",\r\n    loggedIn: false,\r\n    userObject: {},\r\n    redirectTo: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"----- props -\")\r\n      console.log(this.props)\r\n    // this.getUser();\r\n  }\r\n\r\n  getUser() {\r\n    API.getUser({\r\n      email: this.state.email\r\n    }).then(res => {\r\n      console.log(\"----- App.js - getUser res\");\r\n      console.log(res.data);\r\n      console.log(\"----- App.js - getUser res\");\r\n      if (res.data.user) {\r\n        console.log('Get User: There is a user saved in the server session: ');\r\n        this.setState({\r\n          loggedIn: true,\r\n          username: res.data.user.username\r\n        })\r\n      } else {\r\n        console.log('---- App.js - get user failed.');\r\n        this.setState({\r\n          loggedIn: false,\r\n          username: null\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Navbar />\r\n        <Router>\r\n          <Switch>\r\n            <Route exact\r\n              path=\"/\"\r\n              render={() => {\r\n                return (\r\n                  (localStorage.getItem('loginData') ? < Redirect to=\"/play\" /> : < Redirect to=\"/landing\" />)\r\n                )\r\n              }}\r\n            />\r\n            <Route path=\"/questions\" component={ Questions } />\r\n            <Route path=\"/login\" component={ Login } />\r\n            <Route path=\"/logout\" component={ Logout } />\r\n            <Route path=\"/mystats\" component={ MyStats } />\r\n            {/* <Route path=\"/users\" component={ Users } /> */}\r\n            <Route path=\"/signup\" component={ Signup } />\r\n            <Route path=\"/landing\" component={ Landing } />\r\n            <Route path=\"/sueQuestions\" component={ sueQuestions } />\r\n            <Route path=\"/presidents\" component={ Presidents } />\r\n            <Route path=\"/play\" component={ Play } />\r\n          </Switch>\r\n        </Router>\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}